@model test2.Models.Order
@{
    ViewBag.Title = "更改訂單";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h2>修改訂單</h2>
@using (Html.BeginForm())
    {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div class="form-horizontal">
        <h4>Order</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <table class="table table-bordered">
            <tr>
                <td>@Html.LabelFor(model => model.OrderId)</td>
                <td colspan="3">
                    @Html.EditorFor(model => model.OrderId, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.OrderData.OrderId, @readonly = true, @type = "text" } })
                    @Html.ValidationMessageFor(model => model.OrderId)
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.CustId)
                </td>
                <td colspan="3">
                    @Html.DropDownList("CustId", (List<SelectListItem>)ViewBag.CustCodeData)
                    @Html.ValidationMessageFor(model => model.CustId)
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.EmpId)</td>
                <td>
                    @Html.DropDownList("EmpId", (List<SelectListItem>)ViewBag.EmpCodeData)
                    @Html.ValidationMessageFor(model => model.EmpId)
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.OrderDate)</td>
                <td>
                    @Html.TextBoxFor(model => model.OrderDate, new { @type = "date", @Value = ViewBag.OrderDate })
                    @Html.ValidationMessageFor(model => model.OrderDate)
                </td>
                <td>@Html.LabelFor(model => model.RequiredDate)</td>
                <td>
                    @Html.TextBoxFor(model => model.RequiredDate, new { @type = "date", @Value = ViewBag.RequireDdate })
                    @Html.ValidationMessageFor(model => model.RequiredDate)
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.ShippedDate)</td>
                <td>
                    @Html.TextBoxFor(model => model.ShippedDate, new { @type = "date", @Value = ViewBag.ShippedDate })
                    @Html.ValidationMessageFor(model => model.ShippedDate)
                </td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.ShipperId)</td>
                <td>
                    @Html.DropDownList("ShipperId", (List<SelectListItem>)ViewBag.ShipCodeData)
                    @Html.ValidationMessageFor(model => model.ShipperId)
                </td>
                <td>@Html.LabelFor(model => model.Freight)</td>
                <td>
                    @Html.EditorFor(model => model.Freight, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.OrderData.Freight, @type = "number" } })
                    @Html.ValidationMessageFor(model => model.Freight)
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.ShipCountry)</td>
                <td>
                    @Html.EditorFor(model => model.ShipCountry, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.OrderData.ShipCountry } })
                    @Html.ValidationMessageFor(model => model.ShipCountry)
                </td>
                <td>@Html.LabelFor(model => model.ShipCity)</td>
                <td>
                    @Html.EditorFor(model => model.ShipCity, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.OrderData.ShipCity } })
                    @Html.ValidationMessageFor(model => model.ShipCity)
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.ShipRegion)</td>
                <td>
                    @Html.EditorFor(model => model.ShipRegion, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.OrderData.ShipRegion } })
                    @Html.ValidationMessageFor(model => model.ShipRegion)
                </td>
                <td>@Html.LabelFor(model => model.ShipPostalCode)</td>
                <td>
                    @Html.EditorFor(model => model.ShipPostalCode, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.OrderData.ShipPostalCode } })
                    @Html.ValidationMessageFor(model => model.ShipPostalCode)
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.ShipAddress)</td>
                <td>
                    @Html.EditorFor(model => model.ShipAddress, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.OrderData.ShipAddress } })
                    @Html.ValidationMessageFor(model => model.ShipAddress)
                </td>
                <td>@Html.LabelFor(model => model.ShipName)</td>
                <td>
                    @Html.EditorFor(model => model.ShipName, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.OrderData.ShipName } })
                    @Html.ValidationMessageFor(model => model.ShipName)
                </td>
            </tr>
            <tr>
                <td></td>
                <td>
                    <input type="submit" value="存檔" />
                    @Html.ActionLink("回前一頁", "Index")
                </td>
                <td></td>
                <td></td>
            </tr>
        </table>
        <a id="addNewDetial" href="#">新增一筆</a>
        <table class="table table-bordered">
            <tr>
                <td>商品</td>
                <td>單價</td>
                <td>數量</td>
                <td>小計</td>
                <td></td>
            </tr>
            <tbody id="tbContent">
                @foreach (var item in (Model.OrderDetails))
                {
                    <tr>
                        <td>@Html.TextBoxFor(m => Model.OrderDetails[0].ProductName, new { @class = "ProductName", @Value = item.ProductName, @readonly = true })</td>
                        <td>@Html.TextBoxFor(m => Model.OrderDetails[0].UnitPrice, new { @class = "UnitPrice", @Value = item.UnitPrice, @onchange = "onchangeValue(this)", Type = "number" })</td>
                        <td>@Html.TextBoxFor(m => Model.OrderDetails[0].Qty, new { @class = "Qty", @Value = item.Qty, @onchange = "onchangeValue(this)", Type = "number" })</td>
                        <td>@Math.Round(@item.UnitPrice * @item.Qty)</td>
                        <td>
                            <button type="button" class="btnOrderDetailRemove" value=@item.ProductId>刪除</button>
                            <input class="hidOrderId" type="hidden" value='@item.OrderId' />
                            @Html.TextBoxFor(m => Model.OrderDetails[0].ProductId, new { @class = "ProductId", @Value = item.ProductId, @type = "hidden" })
                        </td>
                    </tr>
                }
            </tbody>
            <tbody id="trtemplate" style="display:none;">
                <tr>
                    <td>@Html.DropDownListFor(m => Model.OrderDetails[0].ProductId, (List<SelectListItem>)ViewBag.ProductCodeData, new { @class = "ProductId" })</td>
                    <td>@Html.TextBoxFor(m => Model.OrderDetails[0].UnitPrice, new { @class = "UnitPrice", @Value = 0, @onchange = "onchangeValue(this)", Type = "number" })</td>
                    <td>@Html.TextBoxFor(m => Model.OrderDetails[0].Qty, new { @class = "Qty", @Value = 0, @onchange = "onchangeValue(this)", Type = "number" })</td>
                    <td>0</td>
                    <td>
                        @Html.TextBoxFor(m => Model.OrderDetails[0].ProductName, new { @class = "ProductName", @type = "hidden", @Value = "" })
                        <button type="button" class="btnRemove">刪除</button>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
    }
@section scripts{
    <script type="text/javascript">
        //當數量、單價改變時 重算小計
        function onchangeValue(e) {
            var price = e.parentNode.parentNode.childNodes[3].childNodes[0].value;
            var qty = e.parentNode.parentNode.childNodes[5].childNodes[0].value;
            var subtotal = e.parentNode.parentNode.childNodes[7];
            subtotal.innerHTML = price * qty;
        }

        //明細資料範本
        var trtemplate = $('#trtemplate tr').eq(0).html();

        //新增一列名資料
        $("#addNewDetial").click(function (e) {
            $('#tbContent').append('<tr>' + trtemplate + '</tr>');
        });

        //移除OrderDetail + TR
        $('#tbContent').on('click', '.btnOrderDetailRemove', function (e) {
            if ($('#tbContent tr').length > 1) {
                console.log($(this).val());
                var tr = $(this).closest('tr')
                $.ajax({
                    type: "POST",
                    url: "/Order/DeleteOrderDetail",
                    data: {
                        orderId: $(this).next().val(),
                        productId: $(this).val()
                    },
                    dataType: "json",
                    success: function (response) {
                        $(tr).remove();
                    }
                });
                return false;
            }
        });

        //移除TR
        $('#tbContent').on('click', '.btnRemove', function () {
            if ($('#tbContent tr').length > 1)
                $(this).closest('tr').remove();
        });

        //表單送出前置換element name 讓Action 可以讀到OrderDetials
        $('form').submit(function () {
            for (var i = 0 ; i < $('#tbContent tr').length; i++) {
                $('.ProductId').eq(i).attr('name', 'OrderDetails[' + i + '].ProductId');
                $('.Qty').eq(i).attr('name', 'OrderDetails[' + i + '].Qty');
                $('.UnitPrice').eq(i).attr('name', 'OrderDetails[' + i + '].UnitPrice');
            }
        });
    </script>
}